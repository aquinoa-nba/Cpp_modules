#include "ShrubberyCreationForm.hpp"

std::string tree = \
"###########################'`################################\n" \
"###########################  V##'############################\n" \
"########### #############V'  `V  ############################\n" \
"########################V'      ,############################\n" \
"#########`#############V      ,A###########################V\n" \
"########' `###########V      ,###########################V',#\n" \
"######V'   ###########l      ,####################V~~~~'',###\n" \
"#####V'    ###########l      ##P' ###########V~~'   ,A#######\n" \
"#####l      d#########l      V'  ,#######V~'       A#########\n" \
"#####l      ##########l         ,####V''         ,###########\n" \
"#####l        `V######l        ,###V'   .....;A##############\n" \
"#####A,         `######A,     ,##V' ,A#######################\n" \
"#######A,        `######A,    #V'  A########'''''##########''\n" \
"##########,,,       `####A,           `#''           '''  ,,,\n" \
"#############A,                               ,,,     ,######\n" \
"######################oooo,                 ;####, ,#########\n" \
"##################P'                   A,   ;#####V##########\n" \
"#####P'    ''''       ,###             `#,     `V############\n" \
"##P'                ,d###;              ##,       `V#########\n" \
"##########A,,   #########A              )##,    ##A,..,ooA###\n" \
"#############A, Y#########A,            )####, ,#############\n" \
"###############A ############A,        ,###### ##############\n" \
"###############################       ,#######V##############\n" \
"###############################      ,#######################\n" \
"##############################P    ,d########################\n" \
"##############################'    d#########################\n" \
"##############################     ##########################\n" \
"##############################     ##########################\n" \
"#############################P     ##########################\n" \
"#############################'     ##########################\n" \
"############################P      ##########################\n" \
"###########################P'     ;##########################\n" \
"###########################'     ,###########################\n" \
"##########################       ############################\n" \
"#########################       ,############################\n" \
"########################        d###########P'    `Y#########\n" \
"#######################        ,############        #########\n" \
"######################        ,#############        #########\n" \
"#####################        ,##############b.    ,d#########\n" \
"####################        ,################################\n" \
"###################         #################################\n" \
"##################          #######################P'  `V##P'\n" \
"#######P'     `V#           ###################P'\n" \
"#####P'                    ,#################P'\n" \
"###P'                      d##############P''\n" \
"##P'                       V##############'\n" \
"#P'                         `V###########'\n" \
"#'           ALOHA             `V##P'\n";

ShrubberyCreationForm::ShrubberyCreationForm(std::string const &target)
	: Form("Shrubbery Creation", 145, 137), _fileName(target + "_shrubbery") {}

ShrubberyCreationForm::ShrubberyCreationForm(ShrubberyCreationForm const &other) : Form("Shrubbery Creation", 145, 137)
{
	*this = other;
}

void	ShrubberyCreationForm::act(Bureaucrat const &executor) const
{
	(void)executor;
	std::ofstream	file;
	file.open(_fileName);
	if (file.is_open() == true)
	{
		file << tree;
		file.close();
	}
	else
		throw openException();
}

ShrubberyCreationForm&	ShrubberyCreationForm::operator = (ShrubberyCreationForm const &other)
{
	_fileName = other._fileName;
	return *this;
}
